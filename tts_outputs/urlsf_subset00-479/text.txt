Domain modeling in is significantly easier and safer than with the traditional NET languages This is because of the increased safety of pattern matching and the expressiveness of discriminated unions These concepts are not in or VB NET and therefore bring new tool to the table To illustrate this found some old code Id written to interact with legacy system The system uses many single enums on record to keep track of statuses When one changes it can cause others to change as well Here is typical function that combines two enums to recalculate third public static PositionType GetPositionType if return PositionType Held if return PositionType Posted return PositionType Undefined With some regularity new records are added to these types of enums causing dangerous search and update across the system fixing all the if else or switch case statements Right off the bat pattern matching is huge win here taking hard to comprehend function and making the domain concepts clear let GetPositionType function Deliver Principal Return Counterparty Held Return Principal Deliver Counterparty Posted MovementType Undefined ApplyToParty Undefined PositionType Undefined If we add new status to any of these we wi
