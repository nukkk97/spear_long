ve been refactoring an existing system from prototype to well designed and maintainable system Part of that process is finding better design Part of that process is improving test coverage to find and fix bugs Something fascinating happens during that process if you pay attention Because the design of the project is fluid at this point have free reign to redesign to make testing easier Because test coverage is spotty in places redesigning to make testing easier is almost necessity Fortunately the project is small enough and communication with the stakeholders easy enough that determining what the code should do where it not clear is easy Plenty of people criticize test driven development as if it were an iron clad rule of law where every line of code must have at least one associated test case and if you do that you get badge and some grape flavored juice to hold you over until the spaceship comes If that were the only benefit that would indeed be fair criticismbut how do you test this code sub my my filepath File Spec catfile my Imager new return self invalidate unless my width getwidth my height getheight v
