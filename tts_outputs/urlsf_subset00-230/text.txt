This week at RailsConf we found ourselves sharing lot of tips for using PostgreSQL with Rails We thought it might be worthwhile to write up many of these and share more broadly Here youll find some tips that will help you in debugging and improving performance of your database from your Rails app And now on to the code Manage long running queries with statement time outs Long running queries can have all sorts of negative impact on your database Whether running for hours or even several seconds they can hold locks queue up WAL or just consume lot of system resources Postgres makes it easier to have bit more safety around this with default statement timeout Whats nice is you can set default such as seconds shown here any query that then runs longer than seconds will be killed production url variables Should you need query to run longer within the database session you can set custom statement timeout just valid for the current connection class MyAnalyticsJob ActiveJob Base analytics def perform ActiveRecord Base connection execute SET minutes ensure ActiveRecord Base connection execute SET seconds end end Finding misbehaving queries Rails abstracts a
