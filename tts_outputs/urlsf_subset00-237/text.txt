As of Laravel the framework now uses StackPHP implementation of Symfony HttpKernel This means we can add our own middleware to our HTTP layer What is middleware good for Well lots of things any logic you might stick between the request response life cycle that not necessarily part of your application logic For example Adding session support Parsing query strings Implementing rate limiting Sniffing for bot traffic Adding logging Parsing request JSON Anything else related to the request response lifecycle Laravel Implementation The first thing to know is that to add Middleware to our request response cycle the Decorator Pattern is in use Whether you understand the design pattern or not this basically just means that each middleware we use must implement HttpKernelInterface Next we need to know how to add middleware to our app Luckily the Foundation Application has this functionality built in for us Add HttpKernel middleware onto the stack param string class param array parameters return Illuminate Foundation Application public function middleware this middlewares compact return this Let create some middleware of our own Simple Rate Limiting Example For the sake of quick and dirty example let rate limit our site by I
